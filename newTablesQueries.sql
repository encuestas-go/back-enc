USE ENCUESTA;

CREATE TABLE ENCUESTA_NIVEL_SOCIOECONOMICO(
    ID INT PRIMARY KEY AUTO_INCREMENT,
    ID_USUARIO INT,
    NOMBRE_COMPLETO VARCHAR(100),
    FECHA_NACIMIENTO DATE,
    NACIONALIDAD VARCHAR(100),
    SEXO VARCHAR(100),
    EDAD INT,
    ESTADO_CIVIL VARCHAR(100),
    LONGITUD DOUBLE,
    LATITUD DOUBLE,
    DIRECCION_RESIDENCIA VARCHAR(100),
    ESTATUS_SOCIOECONOMICO VARCHAR(100),
    IDIOMA VARCHAR(100),
    GRADO_ESTUDIOS_ASPIRAR VARCHAR(100),
    ULTIMO_GRADO_PADRE VARCHAR(100),
    ULTIMO_GRADO_MADRE VARCHAR(100),

    FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO(ID)
);
DROP TABLE ENCUESTA_NIVEL_SOCIOECONOMICO;
SELECT * FROM ENCUESTA_NIVEL_SOCIOECONOMICO;


##TABLA ENCUESTA_TRANSPORTE
CREATE TABLE ENCUESTA_TRANSPORTE(
     ID INT PRIMARY KEY AUTO_INCREMENT,
     ID_USUARIO INT,
     TRANSPORTE_PRINCIPAL VARCHAR(100),
     TRANSPORTE_SECUNDARIO VARCHAR(100),
     FRECUENCIA_USO VARCHAR(100),
     PUNTOS_ACCESIBLES BOOLEAN,
     LUGAR_DESTINO_FRECUENTE VARCHAR(100),
     TIEMPO_TRASLADO VARCHAR(100),
     FECHA DATE,

     FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO(ID)
);
DROP TABLE ENCUESTA_TRANSPORTE;
SELECT * FROM ENCUESTA_TRANSPORTE;


DELIMITER //
CREATE TRIGGER AGREGAR_FECHA_ACTUAL_TRANSPORTE
    BEFORE INSERT ON ENCUESTA_TRANSPORTE
    FOR EACH ROW
BEGIN
    SET NEW.FECHA = CURDATE();
END;
//
DELIMITER ;

DELIMITER //
CREATE TRIGGER ACTUALIZAR_FECHA_ACTUAL_TRANSPORTE
    BEFORE UPDATE ON ENCUESTA_ACTIVIDAD
    FOR EACH ROW
BEGIN
    SET NEW.FECHA = CURDATE();
END;
//
DELIMITER ;

##REPORTE 1
SELECT
    TRANSPORTE_PRINCIPAL,
    COUNT(*) AS CANTIDAD
FROM
    ENCUESTA_TRANSPORTE
WHERE
    FECHA BETWEEN '2024-05-02' AND '2024-06-03'
GROUP BY
    TRANSPORTE_PRINCIPAL
ORDER BY
    CANTIDAD ASC;


###TABLA ENCUESTA_SERVICIO
CREATE TABLE ENCUESTA_SERVICIO(
     ID INT PRIMARY KEY AUTO_INCREMENT,
     ID_USUARIO INT,
     PROVEEDOR_LUZ BOOLEAN,
     PROVEEDOR_AGUA BOOLEAN,
     PROVEEDOR_INTERNET VARCHAR(100),
     PROVEEDOR_TELEFONO BOOLEAN,
     PROVEEDOR_TELEVISION BOOLEAN,
     VENCIMIENTO_PAGOS VARCHAR(100),
     PAGOS_ADICIONALES VARCHAR(100),
     GASTOS_SERVICIOS FLOAT,
     FECHA DATE,

     FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO(ID)
);
DROP TABLE ENCUESTA_SERVICIO;

DELIMITER //
CREATE TRIGGER AGREGAR_FECHA_ACTUAL_SERVICIO
    BEFORE INSERT ON ENCUESTA_SERVICIO
    FOR EACH ROW
BEGIN
    SET NEW.FECHA = CURDATE();
END;
//
DELIMITER ;

DELIMITER //
CREATE TRIGGER ACTUALIZAR_FECHA_ACTUAL_SERVICIO
    BEFORE UPDATE ON ENCUESTA_SERVICIO
    FOR EACH ROW
BEGIN
    SET NEW.FECHA = CURDATE();
END;
//
DELIMITER ;

SELECT * FROM ENCUESTA_SERVICIO;

##REPORTE 2
SELECT
    PROVEEDOR_INTERNET,
    COUNT(*) AS CANTIDAD_ALUMNOS
FROM
    ENCUESTA_SERVICIO
WHERE
    FECHA BETWEEN '2024-05-02' AND '2024-06-03'
GROUP BY
    PROVEEDOR_INTERNET
ORDER BY
    CANTIDAD_ALUMNOS ASC;


###TABLA ENCUESTA_NIVEL_DEMOGRAFICO
CREATE TABLE ENCUESTA_NIVEL_DEMOGRAFICO(
     ID INT PRIMARY KEY AUTO_INCREMENT,
     ID_USUARIO INT,
     TIPO_VIVIENDA VARCHAR(100),
     TIPO_CONDICION VARCHAR(100),
     TRANSPORTE_PROPIO BOOLEAN,
     MONTO_INGRESOS FLOAT,
     NUM_INTEGRANTES_TRABAJAN INT,
     NUM_INTEGRANTES_MENOR_EDAD INT,
     DESPENSA_MENSUAL FLOAT,
     APOYOS_GOBIERNO BOOLEAN,
     FECHA DATE,

     FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO(ID)
);
DROP TABLE ENCUESTA_NIVEL_DEMOGRAFICO;

DELIMITER //
CREATE TRIGGER AGREGAR_FECHA_ACTUAL_DEMOGRAFICO
    BEFORE INSERT ON ENCUESTA_NIVEL_DEMOGRAFICO
    FOR EACH ROW
BEGIN
    SET NEW.FECHA = CURDATE();
END;
//
DELIMITER ;

DELIMITER //
CREATE TRIGGER ACTUALIZAR_FECHA_ACTUAL_DEMOGRAFICO
    BEFORE UPDATE ON ENCUESTA_NIVEL_DEMOGRAFICO
    FOR EACH ROW
BEGIN
    SET NEW.FECHA = CURDATE();
END;
//
DELIMITER ;

SELECT * FROM ENCUESTA_NIVEL_DEMOGRAFICO;

##REPORTE 2
SELECT
    MONTO_INGRESOS,
    COUNT(*) as CANTIDAD
FROM
    ENCUESTA_NIVEL_DEMOGRAFICO
WHERE
    FECHA BETWEEN '2024-05-03' AND '2024-06-03'
GROUP BY
    MONTO_INGRESOS;


###REPORTE 3
SELECT
    TIPO_VIVIENDA,
    TIPO_CONDICION,
    COUNT(*) AS CANTIDAD_ALUMNOS
FROM
    ENCUESTA_NIVEL_DEMOGRAFICO
WHERE
    FECHA BETWEEN '2024-05-03' AND '2024-06-03'
GROUP BY
    TIPO_VIVIENDA,
    TIPO_CONDICION
ORDER BY
    CANTIDAD_ALUMNOS ASC;


###TABLA ENCUESTA_ACTIVIDAD
CREATE TABLE ENCUESTA_ACTIVIDAD(
    ID INT PRIMARY KEY AUTO_INCREMENT,
    ID_USUARIO INT,
    JUEGOS_PREFERIDOS VARCHAR(100),
    PASATIEMPOS VARCHAR(100),
    DEPORTE_INTERES VARCHAR(100),
    FRECUENCIA_EJERCICIO VARCHAR(100),
    TIPO_TALLERES VARCHAR(100),
    EVENTOS_SOCIALES VARCHAR(100),
    FECHA DATE,

    FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO(ID)
);

DROP TABLE ENCUESTA_ACTIVIDAD;

SELECT * FROM ENCUESTA_ACTIVIDAD WHERE FECHA BETWEEN '2024-02' AND '2024-06';


DELIMITER //
CREATE TRIGGER AGREGAR_FECHA_ACTUAL
    BEFORE INSERT ON ENCUESTA_ACTIVIDAD
    FOR EACH ROW
BEGIN
    SET NEW.FECHA = CURDATE();
END;
//
DELIMITER ;

DELIMITER //
CREATE TRIGGER ACTUALIZAR_FECHA_ACTUAL
    BEFORE UPDATE ON ENCUESTA_ACTIVIDAD
    FOR EACH ROW
BEGIN
    SET NEW.FECHA = CURDATE();
END;
//
DELIMITER ;

SELECT * FROM ENCUESTA_ACTIVIDAD;

###REPORTE 5
SELECT
    SUM(CASE WHEN PASATIEMPOS LIKE '%Baile%' THEN 1 ELSE 0 END) AS Dance,
    SUM(CASE WHEN PASATIEMPOS  LIKE '%Tocar algún instrumento%' THEN 1 ELSE 0 END) AS PlayInstrument,
    SUM(CASE WHEN PASATIEMPOS  LIKE '%Pintar%' THEN 1 ELSE 0 END) AS Paint,
    SUM(CASE WHEN PASATIEMPOS  LIKE '%Dibujar%' THEN 1 ELSE 0 END) AS Draw,
    SUM(CASE WHEN PASATIEMPOS  LIKE '%Hacer ejercicio%' THEN 1 ELSE 0 END) AS DoExcerise,
    SUM(CASE WHEN PASATIEMPOS LIKE '%Leer%' THEN 1 ELSE 0 END) AS ReadAll,
    SUM(CASE WHEN PASATIEMPOS  LIKE '%Salir a caminar%' THEN 1 ELSE 0 END) AS GoWalking,
    SUM(CASE WHEN PASATIEMPOS  LIKE '%Series o películas%' THEN 1 ELSE 0 END) AS Movies,
    SUM(CASE WHEN PASATIEMPOS LIKE '%Otros%' THEN 1 ELSE 0 END) AS OtherActivities,
    SUM(CASE WHEN EVENTOS_SOCIALES LIKE '%Festivales%' THEN 1 ELSE 0 END) AS Festivals,
    SUM(CASE WHEN EVENTOS_SOCIALES LIKE '%Conciertos%' THEN 1 ELSE 0 END) AS Concerts,
    SUM(CASE WHEN EVENTOS_SOCIALES LIKE '%Exposiciones de arte%' THEN 1 ELSE 0 END) AS ArtExposition,
    SUM(CASE WHEN EVENTOS_SOCIALES LIKE '%Literatura/poesía%' THEN 1 ELSE 0 END) AS LiteraturePoetry,
    SUM(CASE WHEN EVENTOS_SOCIALES LIKE '%Bailes%' THEN 1 ELSE 0 END) AS Dances,
    SUM(CASE WHEN EVENTOS_SOCIALES LIKE '%Charlas/Conferencias%' THEN 1 ELSE 0 END) AS Conferences,
    SUM(CASE WHEN EVENTOS_SOCIALES LIKE '%Parques recreativos o de diversión%' THEN 1 ELSE 0 END) AS RecreationalParks,
    SUM(CASE WHEN EVENTOS_SOCIALES LIKE '%Otros%' THEN 1 ELSE 0 END) AS OtherEvents
FROM ENCUESTA_ACTIVIDAD
WHERE FECHA BETWEEN '2024-02-02' AND '2024-06-02';

###TABLA ENCUESTA_NIVEL_ECONOMICO
CREATE TABLE ENCUESTA_NIVEL_ECONOMICO(
    ID INT PRIMARY KEY AUTO_INCREMENT,
    ID_USUARIO INT,
    SITUACION_ACTUAL VARCHAR(100),
    NOMBRE_EMPLEO VARCHAR(100),
    EMPRESA_ESTABLECIMIENTO VARCHAR(100),
    TIPO_EMPLEO VARCHAR(100),
    SALARIO FLOAT,
    TIPO_MONTO VARCHAR(100),
    TIPO_PRESTACIONES VARCHAR(100),
    FECHA DATE,

    FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO(ID)
);
DROP TABLE ENCUESTA_NIVEL_ECONOMICO;

DELIMITER //
CREATE TRIGGER AGREGAR_FECHA_ACTUAL_ECONOMICO
    BEFORE INSERT ON ENCUESTA_NIVEL_ECONOMICO
    FOR EACH ROW
BEGIN
    SET NEW.FECHA = CURDATE();
END;
//
DELIMITER ;

DELIMITER //
CREATE TRIGGER ACTUALIZAR_FECHA_ACTUAL_ECONOMICO
    BEFORE UPDATE ON ENCUESTA_NIVEL_ECONOMICO
    FOR EACH ROW
BEGIN
    SET NEW.FECHA = CURDATE();
END;
//
DELIMITER ;

SELECT * FROM ENCUESTA_NIVEL_ECONOMICO;

##REPORTE 6
SELECT
    SITUACION_ACTUAL,
    COUNT(*) AS CANTIDAD_ALUMNOS
FROM
    ENCUESTA_NIVEL_ECONOMICO
WHERE
    FECHA BETWEEN '2024-05-02' AND '2024-06-03'
GROUP BY
    SITUACION_ACTUAL
ORDER BY
    CANTIDAD_ALUMNOS ASC;


CREATE TABLE FORO_PREGUNTA(
    ID INT PRIMARY KEY AUTO_INCREMENT,
    ID_USUARIO INT,
    PREGUNTA VARCHAR(1000),
    NOMBRE VARCHAR(100),

    FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO(ID)
);
DROP TABLE FORO_PREGUNTA;
INSERT INTO FORO_PREGUNTA(ID_USUARIO, PREGUNTA, NOMBRE)
VALUES(1, '¿Cómo puedo saber si con mi información puedo pedir una beca?','Lorena');
INSERT INTO FORO_PREGUNTA(ID_USUARIO, PREGUNTA, NOMBRE)
VALUES(8, '¿Se podría habilitar un taller técnico si es por mayoría de demanda por parte de mi grupo?','Carlos');
INSERT INTO FORO_PREGUNTA(ID_USUARIO, PREGUNTA, NOMBRE)
VALUES(9, '¿Hay becas por excelencia de calificaciones?','Christian');
INSERT INTO FORO_PREGUNTA(ID_USUARIO, PREGUNTA, NOMBRE)
VALUES(10, '¿Si requiero una asesoría academica, cuáles son las habilitadas por el momento?','Lorena');


CREATE TABLE FORO_RESPUESTA(
    ID INT PRIMARY KEY AUTO_INCREMENT,
    ID_USUARIO INT,
    RESPUESTA VARCHAR(1000),
    NOMBRE VARCHAR(100),

    FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO(ID)
);

CREATE TABLE FORO_PREGUNTA_RESPUESTA(
    ID_PREGUNTA INT,
    ID_RESPUESTA INT,

    FOREIGN KEY (ID_PREGUNTA) REFERENCES FORO_PREGUNTA(ID),
    FOREIGN KEY (ID_RESPUESTA) REFERENCES FORO_RESPUESTA(ID)
);
DROP TABLE FORO_PREGUNTA_RESPUESTA;


###SELECT  PARA EL GET
SELECT FORO_PREGUNTA.ID ,FORO_RESPUESTA.RESPUESTA, USUARIO.NOMBRE AS USUARIO_RESPUESTA
FROM FORO_PREGUNTA_RESPUESTA
         INNER JOIN FORO_PREGUNTA  ON FORO_PREGUNTA_RESPUESTA.ID_PREGUNTA = FORO_PREGUNTA.ID
         INNER JOIN FORO_RESPUESTA  ON FORO_PREGUNTA_RESPUESTA.ID_RESPUESTA = FORO_RESPUESTA.ID
         INNER JOIN USUARIO ON FORO_RESPUESTA.ID_USUARIO = USUARIO.ID
WHERE FORO_PREGUNTA.ID = 2;
